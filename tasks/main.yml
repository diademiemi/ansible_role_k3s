---
- name: Download k3s binary
  become: true
  ansible.builtin.get_url:
    url: https://github.com/k3s-io/k3s/releases/download/{{ k3s_version }}{{ k3s_architecture_map[ansible_architecture] }}/k3s
    checksum: sha256:https://github.com/k3s-io/k3s/releases/download/{{ k3s_version }}/sha256sum-amd64.txt
    dest: /usr/local/bin/k3s
    owner: root
    group: root
    mode: 0755

- ansible.builtin.include_tasks: master.yml
  tags: master
  when: k3s_role == "master"

- name: Remove untargeted hosts from hostvars
  set_fact:
    play_hostvars: "{{ play_hostvars | default({}) | combine({item.key: item.value}) }}"
  when: item.key in ansible_play_hosts
  loop: "{{ hostvars | dict2items }}"

- name: Set k3s_master_ip if not defined
  ansible.builtin.set_fact:
    k3s_master_ip: "{{ play_hostvars | json_query(ip_query) | first }}"
  vars:
    ip_query: "* | [?k3s_role==`master`].ansible_default_ipv4.address"
  when: k3s_master_ip is not defined

- ansible.builtin.include_tasks: get-config.yml
  tags: get-config
  when: k3s_role == "master"
- ansible.builtin.include_tasks: workers.yml
  tags: nodes
  when: k3s_role == "worker"

- name: Create kubectl symlink
  become: true
  ansible.builtin.file:
    src: /usr/local/bin/k3s
    dest: /usr/local/bin/kubectl
    state: link

- name: Create crictl symlink
  become: true
  ansible.builtin.file:
    src: /usr/local/bin/k3s
    dest: /usr/local/bin/crictl
    state: link

- name: Install Kubernetes volume dependencies
  become: true
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  with_items:
    - open-iscsi
    - nfs-kernel-server
    - nfs-common
  when: ansible_os_family == "Debian"

- name: Install Kubernetes volume dependencies
  become: true
  ansible.builtin.yum:
    name: "{{ item }}"
    state: present
  with_items:
    - iscsi-initiator-utils
    - nfs-utils
  when: ansible_os_family == "RedHat"
